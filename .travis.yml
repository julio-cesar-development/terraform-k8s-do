language: shell # minimal

os:
- linux

dist: bionic

branches:
  only:
  - master
  - development

services:
  - docker

env:
  # set environment
  - SHA=$(git rev-parse --short=7 HEAD) CLUSTER_NAME="k8s-cluster" AWS_DEFAULT_REGION="sa-east-1"

script:
  # terraform lintet
  - docker run --name tflint --rm -v $PWD:/data --entrypoint "" -it wata727/tflint:0.14.0 tflint ./

  # terraform security
  - docker run --name tfsec --rm -v "$PWD:/workdir" -it wesleydeanflexion/tfsec:latest .

  # shell linter
  - docker run --name shellcheck --rm -v $PWD:/mnt -it koalaman/shellcheck-alpine:stable shellcheck /mnt/deploy.sh

after_success:
  - if [ $TRAVIS_PULL_REQUEST != "false" ]; then
      docker run -i --rm
        -e GITHUB_TOKEN=$GITHUB_TOKEN
        -e GITHUB_OWNER=julio-cesar-development
        -e GITHUB_REPO=terraform-k8s-do
        -e GITHUB_COMMENT_TYPE=pr
        -e GITHUB_PR_ISSUE_NUMBER=$TRAVIS_PULL_REQUEST
        -e GITHUB_COMMENT_FORMAT="<b>Comment</b><br/>{{.}}"
        -e GITHUB_COMMENT="build of commit $SHA was successful, LGTM"
        cloudposse/github-commenter:latest
    ; fi

after_failure:
  - if [ $TRAVIS_PULL_REQUEST != "false" ]; then
      docker run -i --rm
        -e GITHUB_TOKEN=$GITHUB_TOKEN
        -e GITHUB_OWNER=julio-cesar-development
        -e GITHUB_REPO=terraform-k8s-do
        -e GITHUB_COMMENT_TYPE=pr
        -e GITHUB_PR_ISSUE_NUMBER=$TRAVIS_PULL_REQUEST
        -e GITHUB_COMMENT_FORMAT="Comment`:`<br/>{{.}}"
        -e GITHUB_COMMENT="build of commit $SHA was not successful"
        cloudposse/github-commenter:latest
    ; fi

deploy:
  on:
    branch: master
  provider: script
  script: bash ./deploy.sh
  skip_cleanup: true

after_deploy:
  - docker container run --name awscli --rm
      -v "$PWD:/data" -it
      -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
      -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
      -e AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION"
      -e CLUSTER_NAME="$CLUSTER_NAME"
      --entrypoint ""
      amazon/aws-cli:2.0.20 sh -c
      "cd /data &&
      aws s3 cp ./plan.tfplan s3://blackdevs-aws/terraform/k8s-do/plan.tfplan &&
      aws s3 cp ./plan.txt s3://blackdevs-aws/terraform/k8s-do/plan.txt &&
      aws s3 cp ./apply.txt s3://blackdevs-aws/terraform/k8s-do/apply.txt &&
      aws s3 cp ./${CLUSTER_NAME}-kubeconfig.yaml s3://blackdevs-aws/terraform/k8s-do/${CLUSTER_NAME}-kubeconfig.yaml"
